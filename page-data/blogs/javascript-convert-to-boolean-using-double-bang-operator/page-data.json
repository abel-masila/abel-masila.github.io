{"componentChunkName":"component---src-templates-blog-template-js","path":"/blogs/javascript-convert-to-boolean-using-double-bang-operator","result":{"data":{"blog":{"content":"Every value has an associated boolean, true or false, value in JS. For example, a null value has an associated boolean value of false. A string value, such as abc has an associated boolean value of true.\n\nValues that are associated with boolean true are said to be truthy. Values that are associated with boolean false values are said to be falsy.\n\nA full list of truthy values can be found here:\n\n[Truthy](https://developer.mozilla.org/en-US/docs/Glossary/Truthy?source=post_page-----db5d8bb4acd6----------------------)\nA full list of falsy values can be found here:\n\n[Falsy](https://developer.mozilla.org/en-US/docs/Glossary/Falsy?source=post_page-----db5d8bb4acd6----------------------)\n\nA single “!” symbol in javascript, also called a “bang”, is the logical “not” operator. If you place this operator in front of a boolean value, it will reverse the value, returning the opposite.\n\n```\n!true; // Returns false.\n!false; // Returns true.\n```\nIf a bang (“!”) returns the opposite truthy value, what would a bang executed twice on a value do?\n```\nconst x = true; // Associated with true.\nconst a = !x; // The returns the opposite of 'x', false.\nconst b = !a; // The ! takes value 'a' of false and reverses it back to true.\n\n!!true // Evaluates to true.\n!!false // Evaluates to false.\n```\nSo, running a bang twice determines the opposite of value, and then returns the opposite of that.\n\nWith non-boolean values, it is kind of cool to see what the double bang does:\n```\nconst x = 'abc'; // Associated with true.\nconst a = !x; // The ! determines x is associated with true and returns the opposite, false.\nconst b = !a; // The ! takes value 'a' of false and reverses it to true.\n\n!!'abc' // Evaluates to true.\n!!null // Evaluates to false.\n```\nKnowing the associated boolean value of any given value is helpful if you want to quickly reduce a value to a boolean:\n```\nfunction BankAccount(cash) {\nthis.cash = cash;\nthis.hasMoney = !!cash;\n}\nvar account = new BankAccount(100.50);\nconsole.log(account.cash); // 100.50\nconsole.log(account.hasMoney); // true\n\nvar emptyAccount = new BankAccount(0);\nconsole.log(emptyAccount.cash); // 0\nconsole.log(emptyAccount.hasMoney); // false\n```\nIn this case, if an account.cash value is greater than zero, the account.hasMoney will be true.\n\nLet’s see another example:\n```\nconst userA = getUser('existingUser'); // { name: Abel, status: 'lit' }\nconst userB = getUser('nonExistingUser'); // null\n\nconst userAExists = !!userA; // true\nconst userBExists = !!userB; // false\n```\n\n\n\n\n"}},"pageContext":{"slug":"javascript-convert-to-boolean-using-double-bang-operator"}}}